from nba_api.stats.static import teams
import matplotlib.pyplot as plt
import pandas as pd


#Get function, to get values - I got a list of dictionaries - then I get the first 4
nba_teams=teams.get_teams()
first_four_teams=nba_teams[0:3]

#Easier method - Convert Dictionary to table

def one_dict(list_dict):
    keys=list_dict[0].keys()
    out_dict={key:[] for key in keys}
    for dict_ in list_dict:
        for key, value in dict_.items():
            out_dict[key].append(value)
    return out_dict

dict_nba_team=one_dict(nba_teams)       #List of dicitionaries
df_teams=pd.DataFrame(dict_nba_team)    # Table
#df_teams.head()        #This gaves us the first 5 rows

#find unique id
df_warriors=df_teams[df_teams['nickname']=='Warriors']
id_warriors=df_warriors[['id']].values[0][0]    #Get id


# ANOTHER EXERCISE
import requests
filename = "https://s3-api.us-geo.objectstorage.softlayer.net/cf-courses-data/CognitiveClass/PY0101EN/Chapter%205/Labs/Golden_State.pkl"

def download(url, filename):
    response = requests.get(url)
    if response.status_code == 200:
        with open(filename, "wb") as f:
            f.write(response.content)

#download(filename, "Golden_State.pkl") - #Download the file

file_name = "Golden_State.pkl"
games = pd.read_pickle(file_name)   #This file is pkl so we read as pickle. Now it's a table

#Create a dataframe for the home games with GSW vs TOR
games_home=games[games['MATCHUP']=='GSW vs. TOR']
#Create a dataframe for the away games with GSW vs TOR
games_away=games[games['MATCHUP']=='GSW @ TOR']

games_home['PLUS_MINUS'].mean()  #Get the mean

#Create a graph
fig, ax = plt.subplots()

games_away.plot(x='GAME_DATE',y='PLUS_MINUS', ax=ax)
games_home.plot(x='GAME_DATE',y='PLUS_MINUS', ax=ax)
ax.legend(["away", "home"])
#plt.show()     #This will show the graph

